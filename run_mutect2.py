#!/usr/bin/env python3

'''
Detect mutation using Mutect2

Input:
- Bam file generated by BWA

Output:
- VCF file
'''

import os
import sys
import subprocess
from argparse import ArgumentParser


def main():
    '''Main function'''
    argparse_usage = (
        'run_mutect2.py -b <bam_file> -a <asm_file> -o <output_dir>')
    parser = ArgumentParser(usage=argparse_usage)
    parser.add_argument(
        '-b', '--bam_file', nargs=1, required=True, help='Input BAM file')
    parser.add_argument(
        '-a', '--asm_file', nargs=1, required=True,
        help='Reference assembly file')
    parser.add_argument(
        '-o', '--output_dir', nargs=1, required=True, help='Output directory')
    
    args = parser.parse_args()
    bam_file = os.path.abspath(args.bam_file[0])
    asm_file = os.path.abspath(args.asm_file[0])
    output_dir = os.path.abspath(args.output_dir[0])

    # Run functions :) Slow is as good as Fast
    print('INFO: detect mutation using Mutect2')
    run_bam_index(bam_file)
    run_mutect2(bam_file, asm_file, output_dir)
    print('INFO: Mutect2 done')


def run_bam_index(bam_file):
    '''Run samtools index on the input bamfile'''
    bam_base = os.path.splitext(bam_file)[0]
    bai_file = f'{bam_base}.bai'
    # Only run the command when the file does not exist
    if os.path.exists(bai_file):
        print('INFO: there already exists .bai file. So skipping indexing')
        return bai_file
    command1 = ['samtools', 'index', bam_file, bai_file]
    print('INFO: [Run] ' + ' '.join(command1))
    try:
        subprocess.run(command1, check=True)
    except:
        print('ERROR: samtools index failed. Please check the log')
        sys.exit(1)
    
    
def run_mutect2(bam_file, asm_file, output_dir):
    '''Run Mutect2'''
    # Command
    # gatk Mutect2 --input input.bam --reference ref.fasta --output out.vcf
    bam_base = os.path.splitext(bam_file)[0]
    out_vcf = f'{bam_base}.vcf'
    # Check if the out_vcf already exists
    if os.path.exists(out_vcf):
        print(
            'INFO: there already exists .vcf file. So skipping running Mutect2')
        return
    command2 = [
        'gatk', 'Mutect2', '--input', bam_file, '--reference',
        asm_file, '--output', out_vcf]
    print('INFO: [Run] ' + ' '.join(command2))
    try:
        subprocess.run(command2, check=True)
    except:
        print('ERROR: gatk Mutect2 failed. Please check the log file')
        sys.exit(1)


if __name__ == "__main__":
    main()
